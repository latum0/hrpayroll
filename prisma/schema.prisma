generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  description     String?
  users           Users[]
  rolePermissions RolePermission[]
}

model Permission {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  description     String?
  rolePermissions RolePermission[]
  userPermissions UserPermission[]
}

model RolePermission {
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int

  @@id([roleId, permissionId])
}

model UserPermission {
  user         Users      @relation(fields: [userId], references: [id])
  userId       Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int

  @@id([userId, permissionId])
}

model Users {
  id              Int              @id @default(autoincrement())
  email           String           @unique
  password        String
  name            String
  role            Role             @relation(fields: [roleId], references: [id])
  roleId          Int              @default(1)
  userPermissions UserPermission[]

  phone             String   @unique
  refreshToken      String?
  emailVerified     Boolean  @default(false)
  verificationToken String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  historiques Historique[]
}

model Historique {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      Users    @relation(fields: [userId], references: [id])
  action    String
  createdAt DateTime @default(now())
  acteur    String
}
